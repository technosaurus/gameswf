// tu-testbed builds
[
  // A default build-everything target.
  { "name": "default",
    "type": "generic",
    "dep": [
      // "demos/font_output/default",
      "gameswf/default",
    ]
  },

  // Some external libs that are used by various programs.

  // SDL
  { "name": "sdl",
    "type": "external_lib",

    "dep_inc_dirs": [
      "#../../../SDL-1.2.13/include"
    ],

    "dep_libs": [
      "#../../../SDL-1.2.13/lib/SDL.lib"
    ],
  },
  { "name": "sdlmain",
    "type": "external_lib",

    // Stupid SDL #defines away main() so it can insert its own
    // wrapper at WinMain!  So we need to link as a windows prog.
    "linker_flags": "-subsystem:windows",

    "dep_libs": [
      "#../../../SDL-1.2.13/lib/SDLmain.lib"
    ]
  },

  // OpenGL
  { "name": "ogl",
    "type": "external_lib",

    // no special inc_dirs

    "dep_libs": ["#:opengl32.lib", "#:glu32.lib"]
  },

  // winsock / net libraries
  { "name": "winsock",
    "type": "external_lib",

    // no special inc_dirs

    "dep_libs": ["#:wsock32.lib"]
  },

  // jpeglib
  { "name": "jpeglib",
    "type": "lib",

    "base_dir": "../../../jpeg-6b",

    "src": [
      "jcomapi.c",
      "jutils.c",
      "jerror.c",
      "jmemmgr.c",
      "jmemnobs.c",
      "jcapimin.c",
      "jcapistd.c",
      "jctrans.c",
      "jcparam.c",
      "jdatadst.c",
      "jcinit.c",
      "jcmaster.c",
      "jcmarker.c",
      "jcmainct.c",
      "jcprepct.c",
      "jccoefct.c",
      "jccolor.c",
      "jcsample.c",
      "jchuff.c",
      "jcphuff.c",
      "jcdctmgr.c",
      "jfdctfst.c",
      "jfdctflt.c",
      "jfdctint.c",
      "jdapimin.c",
      "jdapistd.c",
      "jdtrans.c",
      "jdatasrc.c",
      "jdmaster.c",
      "jdinput.c",
      "jdmarker.c",
      "jdhuff.c",
      "jdphuff.c",
      "jdmainct.c",
      "jdcoefct.c",
      "jdpostct.c",
      "jddctmgr.c",
      "jidctfst.c",
      "jidctflt.c",
      "jidctint.c",
      "jidctred.c",
      "jdsample.c",
      "jdcolor.c",
      "jquant1.c",
      "jquant2.c",
      "jdmerge.c"
    ],

   "dep_inc_dirs": [
      ""
    ],
  },

  // libpng
  { "name": "libpng",
    "type": "external_lib",

    "dep_inc_dirs": [
      "#../../../libpng-1.2.8"
    ],

    "dep_libs": ["#../../../libpng-1.2.8/libpng.lib"]
  },

  // zlib
  { "name": "zlib",
    "type": "external_lib",

    "dep_inc_dirs": [
      "#../../../zlib-1.2.2"
    ],

    "dep_libs": ["#../../../zlib-1.2.2/zlib.lib"]
  },

  // freetype -- build from source.  Easier than getting their build
  // system to work w/ the right options!
  { "name": "freetype",
    "type": "lib",

    // Need a good way to find the source tree, although this
    // could perhaps be configured somewhere else.  Or maybe it's not
    // a required feature.
    //
    // maybe something like:
    //  "find_library": ["find_library",
    //     ["freetype*", "/usr/lib", "/usr/local/lib"],  /* dir pattern(s) */
    //     ["include/freetype/freetype.h", "freetype/freetype.h"]  /* success patterns */
    //  ]
    //
    // or
    //  
    //  "base_dir_searcher": {
    //     "basesearchpaths": [
    //         "", "src", "third_party", "/usr/local/src", "/usr/src"],
    //     "basepatterns": ["freetype", "freetype-*"]],
    //     "detected": ["and",
    //        // (In relation to a candidate ${base_dir}).
    //        ["file_exists", "include/freetype2/freetype.h"],
    //        ["file_exists", "src/base/ftapi.c"]]
    //  },
    //  // and then the src files etc are in relation to the detected base_dir,
    //  // like:
    //  "src": [ "src/autofit/autofit.c", ... ],
    //  "inc_dirs": ["include/freetype/internal", ...]
    //
    //  "optional_deps": ["blah", "blah"],
    // in a dep:
    //  ?? "not_found_message": "" // any purpose to this?

    "base_dir": "../../../freetype-2.3.5/src",
    "src": [
      "autofit/autofit.c",
      "base/ftapi.c",
      "base/ftbase.c",
      "base/ftbbox.c",
      "base/ftbdf.c",
      "base/ftbitmap.c",
      "base/ftdebug.c",
      "base/ftgasp.c",
      "base/ftglyph.c",
      "base/ftgxval.c",
      "base/ftinit.c",
      "base/ftlcdfil.c",
      "base/ftmm.c",
      "base/ftotval.c",
      "base/ftpatent.c",
      "base/ftpfr.c",
      "base/ftstroke.c",
      "base/ftsynth.c",
      "base/ftsystem.c",
      "base/fttype1.c",
      "base/ftwinfnt.c",
      "base/ftxf86.c",
      "bdf/bdf.c",
      "cache/ftcache.c",
      "cff/cff.c",
      "cid/type1cid.c",
      "gzip/ftgzip.c",
      "lzw/ftlzw.c",
      "pcf/pcf.c",
      "pfr/pfr.c",
      "psaux/psaux.c",
      "pshinter/pshinter.c",
      "psnames/psnames.c",
      "raster/raster.c",
      "sfnt/sfnt.c",
      "smooth/smooth.c",
      "truetype/truetype.c",
      "type1/type1.c",
      "type42/type42.c",
      "winfonts/winfnt.c"
    ],

    "inc_dirs": [
      "#../include/freetype/internal",
      "#../include/freetype",
      "#../include",
    ],

    "dep": [
      "#zlib"
    ],

    "target_cflags": "-DFT2_BUILD_LIBRARY",

    "dep_inc_dirs": [
      "#../include/freetype",
      "#../include",
    ]
  }
]
